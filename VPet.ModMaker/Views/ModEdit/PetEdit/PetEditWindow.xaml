<Window
  x:Class="VPet.ModMaker.Views.ModEdit.PetEdit.PetEditWindow"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:ll="clr-namespace:LinePutScript.Localization.WPF;assembly=LinePutScript.Localization.WPF"
  xmlns:local="clr-namespace:VPet.ModMaker.Views.ModEdit.PetEdit"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:pu="https://opensource.panuon.com/wpf-ui"
  xmlns:vm="clr-namespace:VPet.ModMaker.ViewModels.ModEdit.PetEdit"
  Title="PetEditWindow"
  Width="800"
  Height="450"
  mc:Ignorable="d">
  <d:Window.DataContext>
    <vm:PetEditWindowVM />
  </d:Window.DataContext>
  <Window.Resources>
    <Style
      x:Key="Label_ThouchRect"
      BasedOn="{StaticResource {x:Type Label}}"
      TargetType="Label">
      <Setter Property="Visibility" Value="Collapsed" />
      <Setter Property="HorizontalAlignment" Value="Left" />
      <Setter Property="VerticalAlignment" Value="Top" />
      <Setter Property="HorizontalContentAlignment" Value="Center" />
      <Setter Property="VerticalContentAlignment" Value="Center" />
      <Setter Property="BorderThickness" Value="1" />
      <Setter Property="Background" Value="#19FF0000" />
      <Setter Property="BorderBrush" Value="Red" />
      <Style.Triggers>
        <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Mode=Self}}" Value="True">
          <Setter Property="Visibility" Value="Visible" />
        </DataTrigger>
      </Style.Triggers>
    </Style>
  </Window.Resources>
  <Grid>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="Auto" />
      <ColumnDefinition />
    </Grid.ColumnDefinitions>
    <Grid>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition />
      </Grid.RowDefinitions>
      <Grid>
        <Grid>
          <Image
            Width="250"
            Height="250"
            Source="{Binding Image.Value}"
            Stretch="Uniform">
            <Image.ContextMenu>
              <ContextMenu>
                <MenuItem Command="{Binding ChangeImageCommand}" Header="{ll:Str 修改测试图片}" />
              </ContextMenu>
            </Image.ContextMenu>
          </Image>
          <Button
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Command="{Binding AddImageCommand}"
            Content="{ll:Str 添加测试图片}">
            <Button.Style>
              <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
                <Setter Property="Visibility" Value="Hidden" />
                <Style.Triggers>
                  <DataTrigger Binding="{Binding Image.Value}" Value="{x:Null}">
                    <Setter Property="Visibility" Value="Visible" />
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </Button.Style>
          </Button>
        </Grid>
        <Grid>
          <Label Content="TouchHeadRect" Tag="{Binding IsChecked, ElementName=ToggleButton_TouchHead}">
            <Label.Style>
              <Style BasedOn="{StaticResource Label_ThouchRect}" TargetType="Label">
                <Setter Property="Width">
                  <Setter.Value>
                    <MultiBinding Converter="{StaticResource CalculatorConverter}">
                      <Binding Path="Pet.Value.TouchHeadRect.Value.Width.Value" />
                      <Binding Source="*" />
                      <Binding Path="LengthRatio.Value" />
                    </MultiBinding>
                  </Setter.Value>
                </Setter>
                <Setter Property="Height">
                  <Setter.Value>
                    <MultiBinding Converter="{StaticResource CalculatorConverter}">
                      <Binding Path="Pet.Value.TouchHeadRect.Value.Height.Value" />
                      <Binding Source="*" />
                      <Binding Path="LengthRatio.Value" />
                    </MultiBinding>
                  </Setter.Value>
                </Setter>
                <Setter Property="Margin">
                  <Setter.Value>
                    <MultiBinding Converter="{StaticResource RatioMarginConverter}">
                      <Binding Path="LengthRatio.Value" />
                      <Binding Path="Pet.Value.TouchHeadRect.Value.X.Value" />
                      <Binding Path="Pet.Value.TouchHeadRect.Value.Y.Value" />
                    </MultiBinding>
                  </Setter.Value>
                </Setter>
              </Style>
            </Label.Style>
          </Label>
          <Label Content="TouchRaisedRect_Happy" Tag="{Binding IsChecked, ElementName=ToggleButton_TouchRaisedRect_HappyState}">
            <Label.Style>
              <Style BasedOn="{StaticResource Label_ThouchRect}" TargetType="Label">
                <Setter Property="Width">
                  <Setter.Value>
                    <MultiBinding Converter="{StaticResource CalculatorConverter}">
                      <Binding Path="Pet.Value.TouchRaisedRect.Value.Happy.Value.Width.Value" />
                      <Binding Source="*" />
                      <Binding Path="LengthRatio.Value" />
                    </MultiBinding>
                  </Setter.Value>
                </Setter>
                <Setter Property="Height">
                  <Setter.Value>
                    <MultiBinding Converter="{StaticResource CalculatorConverter}">
                      <Binding Path="Pet.Value.TouchRaisedRect.Value.Happy.Value.Height.Value" />
                      <Binding Source="*" />
                      <Binding Path="LengthRatio.Value" />
                    </MultiBinding>
                  </Setter.Value>
                </Setter>
                <Setter Property="Margin">
                  <Setter.Value>
                    <MultiBinding Converter="{StaticResource RatioMarginConverter}">
                      <Binding Path="LengthRatio.Value" />
                      <Binding Path="Pet.Value.TouchRaisedRect.Value.Happy.Value.X.Value" />
                      <Binding Path="Pet.Value.TouchRaisedRect.Value.Happy.Value.Y.Value" />
                    </MultiBinding>
                  </Setter.Value>
                </Setter>
              </Style>
            </Label.Style>
          </Label>
          <Label Content="TouchRaisedRect_Nomal" Tag="{Binding IsChecked, ElementName=ToggleButton_TouchRaisedRect_NomalState}">
            <Label.Style>
              <Style BasedOn="{StaticResource Label_ThouchRect}" TargetType="Label">
                <Setter Property="Width">
                  <Setter.Value>
                    <MultiBinding Converter="{StaticResource CalculatorConverter}">
                      <Binding Path="Pet.Value.TouchRaisedRect.Value.Nomal.Value.Width.Value" />
                      <Binding Source="*" />
                      <Binding Path="LengthRatio.Value" />
                    </MultiBinding>
                  </Setter.Value>
                </Setter>
                <Setter Property="Height">
                  <Setter.Value>
                    <MultiBinding Converter="{StaticResource CalculatorConverter}">
                      <Binding Path="Pet.Value.TouchRaisedRect.Value.Nomal.Value.Height.Value" />
                      <Binding Source="*" />
                      <Binding Path="LengthRatio.Value" />
                    </MultiBinding>
                  </Setter.Value>
                </Setter>
                <Setter Property="Margin">
                  <Setter.Value>
                    <MultiBinding Converter="{StaticResource RatioMarginConverter}">
                      <Binding Path="LengthRatio.Value" />
                      <Binding Path="Pet.Value.TouchRaisedRect.Value.Nomal.Value.X.Value" />
                      <Binding Path="Pet.Value.TouchRaisedRect.Value.Nomal.Value.Y.Value" />
                    </MultiBinding>
                  </Setter.Value>
                </Setter>
              </Style>
            </Label.Style>
          </Label>
          <Label Content="TouchRaisedRect_PoorCondition" Tag="{Binding IsChecked, ElementName=ToggleButton_TouchRaisedRect_PoorConditionState}">
            <Label.Style>
              <Style BasedOn="{StaticResource Label_ThouchRect}" TargetType="Label">
                <Setter Property="Width">
                  <Setter.Value>
                    <MultiBinding Converter="{StaticResource CalculatorConverter}">
                      <Binding Path="Pet.Value.TouchRaisedRect.Value.PoorCondition.Value.Width.Value" />
                      <Binding Source="*" />
                      <Binding Path="LengthRatio.Value" />
                    </MultiBinding>
                  </Setter.Value>
                </Setter>
                <Setter Property="Height">
                  <Setter.Value>
                    <MultiBinding Converter="{StaticResource CalculatorConverter}">
                      <Binding Path="Pet.Value.TouchRaisedRect.Value.PoorCondition.Value.Height.Value" />
                      <Binding Source="*" />
                      <Binding Path="LengthRatio.Value" />
                    </MultiBinding>
                  </Setter.Value>
                </Setter>
                <Setter Property="Margin">
                  <Setter.Value>
                    <MultiBinding Converter="{StaticResource RatioMarginConverter}">
                      <Binding Path="LengthRatio.Value" />
                      <Binding Path="Pet.Value.TouchRaisedRect.Value.PoorCondition.Value.X.Value" />
                      <Binding Path="Pet.Value.TouchRaisedRect.Value.PoorCondition.Value.Y.Value" />
                    </MultiBinding>
                  </Setter.Value>
                </Setter>
              </Style>
            </Label.Style>
          </Label>
          <Label Content="TouchRaisedRect_Ill" Tag="{Binding IsChecked, ElementName=ToggleButton_TouchRaisedRect_IllState}">
            <Label.Style>
              <Style BasedOn="{StaticResource Label_ThouchRect}" TargetType="Label">
                <Setter Property="Width">
                  <Setter.Value>
                    <MultiBinding Converter="{StaticResource CalculatorConverter}">
                      <Binding Path="Pet.Value.TouchRaisedRect.Value.Ill.Value.Width.Value" />
                      <Binding Source="*" />
                      <Binding Path="LengthRatio.Value" />
                    </MultiBinding>
                  </Setter.Value>
                </Setter>
                <Setter Property="Height">
                  <Setter.Value>
                    <MultiBinding Converter="{StaticResource CalculatorConverter}">
                      <Binding Path="Pet.Value.TouchRaisedRect.Value.Ill.Value.Height.Value" />
                      <Binding Source="*" />
                      <Binding Path="LengthRatio.Value" />
                    </MultiBinding>
                  </Setter.Value>
                </Setter>
                <Setter Property="Margin">
                  <Setter.Value>
                    <MultiBinding Converter="{StaticResource RatioMarginConverter}">
                      <Binding Path="LengthRatio.Value" />
                      <Binding Path="Pet.Value.TouchRaisedRect.Value.Ill.Value.X.Value" />
                      <Binding Path="Pet.Value.TouchRaisedRect.Value.Ill.Value.Y.Value" />
                    </MultiBinding>
                  </Setter.Value>
                </Setter>
              </Style>
            </Label.Style>
          </Label>
          <Label
            Width="5"
            Height="5"
            Background="Red"
            Content="RaisePoint_Happy"
            Tag="{Binding IsChecked, ElementName=ToggleButton_RaisePoint_Happy}">
            <Label.Style>
              <Style BasedOn="{StaticResource Label_ThouchRect}" TargetType="Label">
                <Setter Property="Margin">
                  <Setter.Value>
                    <MultiBinding Converter="{StaticResource RatioMarginConverter}">
                      <Binding Path="LengthRatio.Value" />
                      <Binding Path="Pet.Value.RaisePoint.Value.Happy.Value.X.Value" />
                      <Binding Path="Pet.Value.RaisePoint.Value.Happy.Value.Y.Value" />
                    </MultiBinding>
                  </Setter.Value>
                </Setter>
              </Style>
            </Label.Style>
          </Label>
          <Label
            Width="5"
            Height="5"
            Background="Red"
            Content="RaisePoint_Nomal"
            Tag="{Binding IsChecked, ElementName=ToggleButton_RaisePoint_Nomal}">
            <Label.Style>
              <Style BasedOn="{StaticResource Label_ThouchRect}" TargetType="Label">
                <Setter Property="Margin">
                  <Setter.Value>
                    <MultiBinding Converter="{StaticResource RatioMarginConverter}">
                      <Binding Path="LengthRatio.Value" />
                      <Binding Path="Pet.Value.RaisePoint.Value.Nomal.Value.X.Value" />
                      <Binding Path="Pet.Value.RaisePoint.Value.Nomal.Value.Y.Value" />
                    </MultiBinding>
                  </Setter.Value>
                </Setter>
              </Style>
            </Label.Style>
          </Label>
          <Label
            Width="5"
            Height="5"
            Background="Red"
            Content="RaisePoint_PoorCondition"
            Tag="{Binding IsChecked, ElementName=ToggleButton_RaisePoint_PoorCondition}">
            <Label.Style>
              <Style BasedOn="{StaticResource Label_ThouchRect}" TargetType="Label">
                <Setter Property="Margin">
                  <Setter.Value>
                    <MultiBinding Converter="{StaticResource RatioMarginConverter}">
                      <Binding Path="LengthRatio.Value" />
                      <Binding Path="Pet.Value.RaisePoint.Value.PoorCondition.Value.X.Value" />
                      <Binding Path="Pet.Value.RaisePoint.Value.PoorCondition.Value.Y.Value" />
                    </MultiBinding>
                  </Setter.Value>
                </Setter>
              </Style>
            </Label.Style>
          </Label>
          <Label
            Width="5"
            Height="5"
            Background="Red"
            Content="RaisePoint_Ill"
            Tag="{Binding IsChecked, ElementName=ToggleButton_RaisePoint_Ill}">
            <Label.Style>
              <Style BasedOn="{StaticResource Label_ThouchRect}" TargetType="Label">
                <Setter Property="Margin">
                  <Setter.Value>
                    <MultiBinding Converter="{StaticResource RatioMarginConverter}">
                      <Binding Path="LengthRatio.Value" />
                      <Binding Path="Pet.Value.RaisePoint.Value.Ill.Value.X.Value" />
                      <Binding Path="Pet.Value.RaisePoint.Value.Ill.Value.Y.Value" />
                    </MultiBinding>
                  </Setter.Value>
                </Setter>
              </Style>
            </Label.Style>
          </Label>
        </Grid>
      </Grid>
      <Grid Grid.Row="1">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto" />
          <RowDefinition Height="Auto" />
          <RowDefinition Height="Auto" />
          <RowDefinition />
        </Grid.RowDefinitions>
        <Label Content="Id" />
        <TextBox Grid.Column="1" Text="{Binding Pet.Value.Id.Value}" />
        <Label Grid.Row="1" Content="{ll:Str 名称}" />
        <TextBox
          Grid.Row="1"
          Grid.Column="1"
          Text="{Binding Pet.Value.CurrentI18nData.Value.PetName.Value}" />
        <Label Grid.Row="2" Content="{ll:Str 宠物名称}" />
        <TextBox
          Grid.Row="2"
          Grid.Column="1"
          Text="{Binding Pet.Value.CurrentI18nData.Value.Description.Value}" />
        <Label Grid.Row="3" Content="{ll:Str 宠物描述}" />
        <TextBox
          Grid.Row="3"
          Grid.Column="1"
          Text="{Binding Pet.Value.CurrentI18nData.Value.Description.Value}" />
      </Grid>
    </Grid>
    <Grid Grid.Column="1">
      <Grid.RowDefinitions>
        <RowDefinition />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>
      <ScrollViewer VerticalScrollBarVisibility="Auto">
        <StackPanel>
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <ToggleButton
              x:Name="ToggleButton_TouchHead"
              Padding="5"
              HorizontalContentAlignment="Stretch"
              Content="TouchHead:" />
            <Grid Grid.Column="1" Margin="5">
              <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
              </Grid.ColumnDefinitions>
              <Label Background="{x:Null}" Content="x:" />
              <pu:NumberInput
                Grid.Column="1"
                d:Value="100"
                Value="{Binding Pet.Value.TouchHeadRect.Value.X.Value}" />
              <Label
                Grid.Column="2"
                Background="{x:Null}"
                Content="y:" />
              <pu:NumberInput
                Grid.Column="3"
                d:Value="100"
                Value="{Binding Pet.Value.TouchHeadRect.Value.Y.Value, Mode=TwoWay}" />
              <Label
                Grid.Row="1"
                Background="{x:Null}"
                Content="w:" />
              <pu:NumberInput
                Grid.Row="1"
                Grid.Column="1"
                d:Value="100"
                Value="{Binding Pet.Value.TouchHeadRect.Value.Width.Value, Mode=TwoWay}" />
              <Label
                Grid.Row="1"
                Grid.Column="2"
                Background="{x:Null}"
                Content="h:" />
              <pu:NumberInput
                Grid.Row="1"
                Grid.Column="3"
                d:Value="100"
                Value="{Binding Pet.Value.TouchHeadRect.Value.Height.Value, Mode=TwoWay}" />
            </Grid>
          </Grid>
          <Expander Header="TouchRaisedRect">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <ToggleButton
                x:Name="ToggleButton_TouchRaisedRect_HappyState"
                Padding="5"
                HorizontalContentAlignment="Stretch"
                d:IsChecked="True"
                Content="HappyState:" />
              <Grid Grid.Column="1" Margin="5">
                <Grid.RowDefinitions>
                  <RowDefinition />
                  <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Label Background="{x:Null}" Content="x:" />
                <pu:NumberInput
                  Grid.Column="1"
                  d:Value="100"
                  Value="{Binding Pet.Value.TouchRaisedRect.Value.Happy.Value.X.Value, Mode=TwoWay}" />
                <Label
                  Grid.Column="2"
                  Background="{x:Null}"
                  Content="y:" />
                <pu:NumberInput
                  Grid.Column="3"
                  d:Value="100"
                  Value="{Binding Pet.Value.TouchRaisedRect.Value.Happy.Value.Y.Value, Mode=TwoWay}" />
                <Label
                  Grid.Row="1"
                  Background="{x:Null}"
                  Content="w:" />
                <pu:NumberInput
                  Grid.Row="1"
                  Grid.Column="1"
                  d:Value="100"
                  Value="{Binding Pet.Value.TouchRaisedRect.Value.Happy.Value.Width.Value, Mode=TwoWay}" />
                <Label
                  Grid.Row="1"
                  Grid.Column="2"
                  Background="{x:Null}"
                  Content="h:" />
                <pu:NumberInput
                  Grid.Row="1"
                  Grid.Column="3"
                  d:Value="100"
                  Value="{Binding Pet.Value.TouchRaisedRect.Value.Happy.Value.Height.Value, Mode=TwoWay}" />
              </Grid>
              <ToggleButton
                x:Name="ToggleButton_TouchRaisedRect_NomalState"
                Grid.Row="1"
                Padding="5"
                HorizontalContentAlignment="Stretch"
                d:IsChecked="True"
                Content="NomalState:" />
              <Grid
                Grid.Row="1"
                Grid.Column="1"
                Margin="5">
                <Grid.RowDefinitions>
                  <RowDefinition />
                  <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Label Background="{x:Null}" Content="x:" />
                <pu:NumberInput
                  Grid.Column="1"
                  d:Value="100"
                  Value="{Binding Pet.Value.TouchRaisedRect.Value.Nomal.Value.X.Value, Mode=TwoWay}" />
                <Label
                  Grid.Column="2"
                  Background="{x:Null}"
                  Content="y:" />
                <pu:NumberInput
                  Grid.Column="3"
                  d:Value="100"
                  Value="{Binding Pet.Value.TouchRaisedRect.Value.Nomal.Value.Y.Value, Mode=TwoWay}" />
                <Label
                  Grid.Row="1"
                  Background="{x:Null}"
                  Content="w:" />
                <pu:NumberInput
                  Grid.Row="1"
                  Grid.Column="1"
                  d:Value="100"
                  Value="{Binding Pet.Value.TouchRaisedRect.Value.Nomal.Value.Width.Value, Mode=TwoWay}" />
                <Label
                  Grid.Row="1"
                  Grid.Column="2"
                  Background="{x:Null}"
                  Content="h:" />
                <pu:NumberInput
                  Grid.Row="1"
                  Grid.Column="3"
                  d:Value="100"
                  Value="{Binding Pet.Value.TouchRaisedRect.Value.Nomal.Value.Height.Value, Mode=TwoWay}" />
              </Grid>
              <ToggleButton
                x:Name="ToggleButton_TouchRaisedRect_PoorConditionState"
                Grid.Row="2"
                Padding="5"
                HorizontalContentAlignment="Stretch"
                d:IsChecked="True"
                Content="PoorConditionState:" />
              <Grid
                Grid.Row="2"
                Grid.Column="1"
                Margin="5">
                <Grid.RowDefinitions>
                  <RowDefinition />
                  <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Label Background="{x:Null}" Content="x:" />
                <pu:NumberInput
                  Grid.Column="1"
                  d:Value="100"
                  Value="{Binding Pet.Value.TouchRaisedRect.Value.PoorCondition.Value.X.Value, Mode=TwoWay}" />
                <Label
                  Grid.Column="2"
                  Background="{x:Null}"
                  Content="y:" />
                <pu:NumberInput
                  Grid.Column="3"
                  d:Value="100"
                  Value="{Binding Pet.Value.TouchRaisedRect.Value.PoorCondition.Value.Y.Value, Mode=TwoWay}" />
                <Label
                  Grid.Row="1"
                  Background="{x:Null}"
                  Content="w:" />
                <pu:NumberInput
                  Grid.Row="1"
                  Grid.Column="1"
                  d:Value="100"
                  Value="{Binding Pet.Value.TouchRaisedRect.Value.PoorCondition.Value.Width.Value, Mode=TwoWay}" />
                <Label
                  Grid.Row="1"
                  Grid.Column="2"
                  Background="{x:Null}"
                  Content="h:" />
                <pu:NumberInput
                  Grid.Row="1"
                  Grid.Column="3"
                  d:Value="100"
                  Value="{Binding Pet.Value.TouchRaisedRect.Value.PoorCondition.Value.Height.Value, Mode=TwoWay}" />
              </Grid>
              <ToggleButton
                x:Name="ToggleButton_TouchRaisedRect_IllState"
                Grid.Row="3"
                Padding="5"
                HorizontalContentAlignment="Stretch"
                d:IsChecked="True"
                Content="IllState:" />
              <Grid
                Grid.Row="3"
                Grid.Column="1"
                Margin="5">
                <Grid.RowDefinitions>
                  <RowDefinition />
                  <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Label Background="{x:Null}" Content="x:" />
                <pu:NumberInput
                  Grid.Column="1"
                  d:Value="100"
                  Value="{Binding Pet.Value.TouchRaisedRect.Value.Ill.Value.X.Value, Mode=TwoWay}" />
                <Label
                  Grid.Column="2"
                  Background="{x:Null}"
                  Content="y:" />
                <pu:NumberInput
                  Grid.Column="3"
                  d:Value="100"
                  Value="{Binding Pet.Value.TouchRaisedRect.Value.Ill.Value.Y.Value, Mode=TwoWay}" />
                <Label
                  Grid.Row="1"
                  Background="{x:Null}"
                  Content="w:" />
                <pu:NumberInput
                  Grid.Row="1"
                  Grid.Column="1"
                  d:Value="100"
                  Value="{Binding Pet.Value.TouchRaisedRect.Value.Ill.Value.Width.Value, Mode=TwoWay}" />
                <Label
                  Grid.Row="1"
                  Grid.Column="2"
                  Background="{x:Null}"
                  Content="h:" />
                <pu:NumberInput
                  Grid.Row="1"
                  Grid.Column="3"
                  d:Value="100"
                  Value="{Binding Pet.Value.TouchRaisedRect.Value.Ill.Value.Height.Value, Mode=TwoWay}" />
              </Grid>
            </Grid>
          </Expander>
          <Expander Header="RaisePoint">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <ToggleButton
                x:Name="ToggleButton_RaisePoint_Happy"
                Padding="5"
                HorizontalContentAlignment="Stretch"
                Content="HappyState:" />
              <Grid Grid.Column="1" Margin="5">
                <Grid.RowDefinitions>
                  <RowDefinition />
                  <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Label Background="{x:Null}" Content="x:" />
                <pu:NumberInput
                  Grid.Column="1"
                  d:Value="100"
                  Value="{Binding Pet.Value.RaisePoint.Value.Happy.Value.X.Value, Mode=TwoWay}" />
                <Label
                  Grid.Column="2"
                  Background="{x:Null}"
                  Content="y:" />
                <pu:NumberInput
                  Grid.Column="3"
                  d:Value="100"
                  Value="{Binding Pet.Value.RaisePoint.Value.Happy.Value.Y.Value, Mode=TwoWay}" />
              </Grid>
              <ToggleButton
                x:Name="ToggleButton_RaisePoint_Nomal"
                Grid.Row="1"
                Padding="5"
                HorizontalContentAlignment="Stretch"
                Content="NomalState:" />
              <Grid
                Grid.Row="1"
                Grid.Column="1"
                Margin="5">
                <Grid.RowDefinitions>
                  <RowDefinition />
                  <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Label Background="{x:Null}" Content="x:" />
                <pu:NumberInput
                  Grid.Column="1"
                  d:Value="100"
                  Value="{Binding Pet.Value.RaisePoint.Value.Nomal.Value.X.Value, Mode=TwoWay}" />
                <Label
                  Grid.Column="2"
                  Background="{x:Null}"
                  Content="y:" />
                <pu:NumberInput
                  Grid.Column="3"
                  d:Value="100"
                  Value="{Binding Pet.Value.RaisePoint.Value.Nomal.Value.Y.Value, Mode=TwoWay}" />
              </Grid>
              <ToggleButton
                x:Name="ToggleButton_RaisePoint_PoorCondition"
                Grid.Row="2"
                Padding="5"
                HorizontalContentAlignment="Stretch"
                Content="PoorConditionState:" />
              <Grid
                Grid.Row="2"
                Grid.Column="1"
                Margin="5">
                <Grid.RowDefinitions>
                  <RowDefinition />
                  <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Label Background="{x:Null}" Content="x:" />
                <pu:NumberInput
                  Grid.Column="1"
                  d:Value="100"
                  Value="{Binding Pet.Value.RaisePoint.Value.PoorCondition.Value.X.Value, Mode=TwoWay}" />
                <Label
                  Grid.Column="2"
                  Background="{x:Null}"
                  Content="y:" />
                <pu:NumberInput
                  Grid.Column="3"
                  d:Value="100"
                  Value="{Binding Pet.Value.RaisePoint.Value.PoorCondition.Value.Y.Value, Mode=TwoWay}" />
              </Grid>
              <ToggleButton
                x:Name="ToggleButton_RaisePoint_Ill"
                Grid.Row="3"
                Padding="5"
                HorizontalContentAlignment="Stretch"
                Content="IllState:" />
              <Grid
                Grid.Row="3"
                Grid.Column="1"
                Margin="5">
                <Grid.RowDefinitions>
                  <RowDefinition />
                  <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Label Background="{x:Null}" Content="x:" />
                <pu:NumberInput
                  Grid.Column="1"
                  d:Value="100"
                  Value="{Binding Pet.Value.RaisePoint.Value.Ill.Value.X.Value, Mode=TwoWay}" />
                <Label
                  Grid.Column="2"
                  Background="{x:Null}"
                  Content="y:" />
                <pu:NumberInput
                  Grid.Column="3"
                  d:Value="100"
                  Value="{Binding Pet.Value.RaisePoint.Value.Ill.Value.Y.Value, Mode=TwoWay}" />
              </Grid>
            </Grid>
          </Expander>
        </StackPanel>
      </ScrollViewer>
      <Grid Grid.Row="1">
        <Grid.ColumnDefinitions>
          <ColumnDefinition />
          <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Button
          x:Name="Button_Cancel"
          Margin="10"
          Click="Button_Cancel_Click"
          Content="{ll:Str 取消}" />
        <Button
          x:Name="Button_Yes"
          Grid.Column="1"
          Margin="10"
          Click="Button_Yes_Click"
          Content="{ll:Str 确定}" />
      </Grid>
    </Grid>
  </Grid>
</Window>
